/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2013 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.hasoffers.gaidwrapper;

import java.io.IOException;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollFunction;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;

import android.content.Context;

import com.google.android.gms.ads.identifier.AdvertisingIdClient;
import com.google.android.gms.ads.identifier.AdvertisingIdClient.Info;

@Kroll.module(name="Gaidwrapper", id="com.hasoffers.gaidwrapper")
public class GaidwrapperModule extends KrollModule
{
    // Standard Debugging variables
    private static final String TAG = "GaidwrapperModule";
    
    // You can define constants with @Kroll.constant, for example:
    // @Kroll.constant public static final String EXTERNAL_NAME = value;
    
    public GaidwrapperModule()
    {
        super();
    }

    @Kroll.onAppCreate
    public static void onAppCreate(TiApplication app)
    {
        Log.d(TAG, "inside onAppCreate");
        // put module init code that needs to run when the application is created
    }

    // Methods
    @Kroll.method
    public void getGoogleAdvertisingId(KrollFunction callback)
    {
        Log.d(TAG, "getGoogleAdvertisingId called");
        new Thread(new GetGAIDThread(TiApplication.getInstance(), callback)).start();
        return;
    }
    
    class GetGAIDThread implements Runnable {
        Context mContext;
        KrollFunction mCallback;
        
        public GetGAIDThread(Context context, KrollFunction callback) {
            this.mContext = context;
            this.mCallback = callback;
        }
        
        @Override
        public void run() {
            try {
                Info adInfo = AdvertisingIdClient.getAdvertisingIdInfo(mContext);
                
                KrollDict info = new KrollDict();
                info.put("gaid", adInfo.getId());
                info.put("isLAT", adInfo.isLimitAdTrackingEnabled());
                mCallback.call(getKrollObject(), info);
            } catch (Exception e) {
            	mCallback.call(getKrollObject(), new KrollDict());
            }
        }
    }

}

